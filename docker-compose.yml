---
version: '3'
x-airflow-common:
  &airflow-common
  build: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    # For backward compatibility, with Airflow <2.3
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    AIRFLOW__CONN__POSTGRES_LOCAL_USER: ${AIRFLOW__CONN__POSTGRES_LOCAL_USER}
    AIRFLOW__CONN__POSTGRES_LOCAL_PASSWORD: ${AIRFLOW__CONN__POSTGRES_LOCAL_PASSWORD}
    AIRFLOW__CONN__POSTGRES_LOCAL_HOST: ${AIRFLOW__CONN__POSTGRES_LOCAL_HOST}
    AIRFLOW__CONN__POSTGRES_LOCAL_PORT: ${AIRFLOW__CONN__POSTGRES_LOCAL_PORT}
    AIRFLOW__CONN__POSTGRES_LOCAL_DB: ${AIRFLOW__CONN__POSTGRES_LOCAL_DB}
    AIRFLOW__CONN__MINIO_ROOT_USER: ${AIRFLOW__CONN__MINIO_ROOT_USER}
    AIRFLOW__CONN__MINIO_ROOT_PASSWORD: ${AIRFLOW__CONN__MINIO_ROOT_PASSWORD}
    ESPN_YEAR: ${ESPN_YEAR}
    ESPN_LEAGUEID: ${ESPN_LEAGUEID}
    ESPN_SWID: ${ESPN_SWID}
    ESPN_S2: ${ESPN_S2}
    _PIP_ADDITIONAL_REQUIREMENTS: ''
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./dbt/fantasyBrosDbt:/opt/airflow/dbt/fantasyBrosDbt
    - ./tests:/opt/airflow/tests
  user: "${AIRFLOW_UID}:0"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9090" /data
  ports:
    - "9000:9000"
    - "9090:9090"
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3


services:
  postgres-ff-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${AIRFLOW__CONN__POSTGRES_LOCAL_USER}
      - POSTGRES_PASSWORD=${AIRFLOW__CONN__POSTGRES_LOCAL_PASSWORD}
      - POSTGRES_DB=${AIRFLOW__CONN__POSTGRES_LOCAL_DB}
    volumes:
      - postgres-ff-db-volume:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    healthcheck:
      test: ["CMD", "pg_isready -U ${AIRFLOW__CONN__POSTGRES_LOCAL_USER} -d ${AIRFLOW__CONN__POSTGRES_LOCAL_DB}"]
      interval: 5s
      retries: 5
    ports:
      - "5431:5432"
    restart: always
  
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  minio:
    <<: *minio-common
    hostname: minio1
    environment:
      - MINIO_ROOT_USER=${AIRFLOW__CONN__MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${AIRFLOW__CONN__MINIO_ROOT_PASSWORD}
    volumes:
      - /minio/data:/data
    restart: always

  pgadmin4:
      image: dpage/pgadmin4
      restart: always
      environment:
          - PGADMIN_DEFAULT_EMAIL=${PG_ADMIN_EMAIL}
          - PGADMIN_DEFAULT_PASSWORD=${PG_ADMIN_PASSWORD}
      ports:
          - "15432:80"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    container_name: webserver
    ports:
      - 8008:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8008/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    container_name: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    user: "0:0"
    #volumes:
    #  - ${AIRFLOW_PROJ_DIR:-.}:/sources


volumes:
  postgres-db-volume:
  postgres-ff-db-volume: